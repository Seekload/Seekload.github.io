<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>切片 on Seekload&#39;s Blog</title>
    <link>https://seekload.net/tags/%E5%88%87%E7%89%87/</link>
    <description>Recent content in 切片 on Seekload&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 30 Jan 2019 06:55:58 +0800</lastBuildDate><atom:link href="https://seekload.net/tags/%E5%88%87%E7%89%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Strings、bytes and runes </title>
      <link>https://seekload.net/2019/01/30/go-strings-bytes-runes.html</link>
      <pubDate>Wed, 30 Jan 2019 06:55:58 +0800</pubDate>
      
      <guid>https://seekload.net/2019/01/30/go-strings-bytes-runes.html</guid>
      <description>Go 中的字符串值得特别关注，与其他语言相比，Go 中的字符串实现方式有所不同。 字符串 在 Go 中，使用双引号 &amp;quot;&amp;quot; 声明字符串： 1 2 3 s := &amp;#34;Hello world&amp;#34; fmt.Println(&amp;#34;len(s):&amp;#34;,len(s)) fmt.Println(s); 输出： 1 2</description>
    </item>
    
    <item>
      <title>非懂不可的Slice（二）</title>
      <link>https://seekload.net/2019/01/30/go-slice-second.html</link>
      <pubDate>Wed, 30 Jan 2019 06:30:45 +0800</pubDate>
      
      <guid>https://seekload.net/2019/01/30/go-slice-second.html</guid>
      <description>这一节，我们来讨论更多关于Slice的用法。 nil切片与空切片 nil切片 1 2 3 var s []int fmt.Println(s == nil) // 输出 true fmt.Println(len(s),cap(s)) // 输出：0 0 上面这段代码声明了一个nil</description>
    </item>
    
    <item>
      <title>非懂不可的Slice（一）</title>
      <link>https://seekload.net/2019/01/29/go-slice-first.html</link>
      <pubDate>Tue, 29 Jan 2019 21:47:53 +0800</pubDate>
      
      <guid>https://seekload.net/2019/01/29/go-slice-first.html</guid>
      <description>前言 切片是一种复合数据类型，与数组类似，存放相同数据类型的元素，但数组的大小是固定的，而切片的大小可变，可以按需自动改变大小。切片是基于底层</description>
    </item>
    
  </channel>
</rss>
